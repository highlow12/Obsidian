{"schemaVersion":2,"id":"f8cf2f97-ced6-43a8-8830-2936f7c6cf2e","title":"정렬되지 않은 리스트를 대상으로 정렬 후 이진탐색을 시도하면 시간복잡도는 O(n^2 log","createdAt":1733557546477,"updatedAt":1733557639550,"messages":[{"role":"user","content":{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"정렬되지 않은 리스트를 대상으로 정렬 후 이진탐색을 시도하면 시간복잡도는 O(n^2 log n)인건가","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}},"promptContent":[{"type":"text","text":"\n\n정렬되지 않은 리스트를 대상으로 정렬 후 이진탐색을 시도하면 시간복잡도는 O(n^2 log n)인건가\n\n"}],"id":"396ecfe2-54ec-41ed-b05f-fbc958f2fda6","mentionables":[{"type":"current-file","file":"1. 프로젝트/학교/알고리즘/탐색과 분할정복.md"}]},{"role":"assistant","content":"아닙니다. 정렬되지 않은 리스트를 정렬한 후 이진 탐색을 수행하는 경우, 전체 시간 복잡도는 정렬 알고리즘과 이진 탐색 알고리즘의 시간 복잡도의 합으로 계산됩니다. 일반적으로 효율적인 정렬 알고리즘(예: 병합 정렬, 힙 정렬)의 시간 복잡도는 O(n log n)입니다. 이진 탐색의 시간 복잡도는 O(log n)입니다. 따라서 전체 시간 복잡도는 O(n log n) + O(log n)이 되고, 이는 O(n log n)으로 단순화됩니다.  O(n^2 log n)이 되는 경우는 정렬되지 않은 리스트에서  *매번* 이진 탐색을 수행하기 위해 *매번* 정렬을 새로 하는 경우에 해당합니다.\n","id":"a674b194-38c6-46f7-bf56-2c2cdd0c7148","metadata":{"usage":{"prompt_tokens":710,"completion_tokens":207,"total_tokens":917},"model":{"provider":"gemini","model":"gemini-1.5-pro"}}},{"role":"user","content":{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"그럼 최악의 경우는 O(n^2 log n)이겠네","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}},"promptContent":[{"type":"text","text":"\n\n그럼 최악의 경우는 O(n^2 log n)이겠네\n\n"}],"id":"6be54d98-5241-4139-95de-bdd3569f7736","mentionables":[{"type":"current-file","file":"1. 프로젝트/학교/알고리즘/탐색과 분할정복.md"}]},{"role":"assistant","content":"아닙니다. 최악의 경우에도 O(n log n) 입니다. 최악의 경우란, 정렬 알고리즘이 n log n 만큼의 시간이 걸리는 경우를 말하며 (비교 기반 정렬 알고리즘의 경우), 이진 탐색과 합쳐도 여전히 O(n log n) 입니다. 다시 한번, O(n^2 log n)이 되려면 *매번* 이진 탐색 전에 정렬을 새로 해야 합니다.  한 번 정렬 후에는 이진 탐색을 여러 번 수행해도 전체 시간 복잡도는 O(n log n)을 유지합니다.\n","id":"394f9d4c-f249-48a7-b7c1-bc736c8953dc","metadata":{"usage":{"prompt_tokens":939,"completion_tokens":150,"total_tokens":1089},"model":{"provider":"gemini","model":"gemini-1.5-pro"}}},{"role":"user","content":{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"합병정렬 최악 시간복잡도가 뭐지?","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}},"promptContent":[{"type":"text","text":"\n\n합병정렬 최악 시간복잡도가 뭐지?\n\n"}],"id":"986eaba7-19f6-4343-a653-e7709f5c7944","mentionables":[{"type":"current-file","file":"1. 프로젝트/학교/알고리즘/탐색과 분할정복.md"}]},{"role":"assistant","content":"합병 정렬의 최악의 경우 시간 복잡도는 `O(n log n)` 입니다.  평균적인 경우와 최선의 경우에도 시간 복잡도는 동일하게 `O(n log n)` 입니다.\n","id":"819f7347-8e69-4c02-bdeb-9814c7e76f47","metadata":{"usage":{"prompt_tokens":1116,"completion_tokens":52,"total_tokens":1168},"model":{"provider":"gemini","model":"gemini-1.5-pro"}}}]}